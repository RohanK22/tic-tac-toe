{"version":3,"sources":["App.js","index.js"],"names":["App","useState","Array","fill","board","setBoard","turnX","setTurnX","winner","setWinner","handleClick","i","boardCopy","squares","lines","length","a","b","c","calculateWinner","useEffect","document","getElementById","innerHTML","className","map","x","onClick","id","ReactDOM","render","StrictMode"],"mappings":"2OAgFeA,MA7Ef,WAEC,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BN,mBAAS,MAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAACC,GACpB,IAAMC,EAAS,YAAOR,GAClBI,GAA0B,MAAhBI,EAAUD,KACxBC,EAAUD,GAAKL,EAAQ,IAAM,IAC7BD,EAASO,GACTL,GAAUD,GACVG,EAyCF,SAAyBI,GAWxB,IAVA,IAAMC,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECH,EAAI,EAAGA,EAAIG,EAAMC,OAAQJ,IAAK,CACtC,kBAAkBG,EAAMH,GAAxB,GAAOK,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GACCL,EAAQG,IACRH,EAAQG,KAAOH,EAAQI,IACvBJ,EAAQG,KAAOH,EAAQK,GAEvB,OAAOL,EAAQG,GAGjB,OAAO,KA9DIG,CAAgBP,MAqC3B,OAlCAQ,qBAAU,WACTC,SAASC,eAAe,YAAYC,UAAYf,EAC7C,WAAaA,EAAS,0BACtB,iBAAmBF,EAAQ,IAAM,OAClC,CAACF,IA8BG,qBAAKoB,UAAU,MAAf,SA1BL,qCACC,oBAAIA,UAAU,UAAd,yBACA,qBAAKA,UAAU,QAAf,SACEpB,EAAMqB,KAAI,SAACC,EAAGf,GACd,OACC,qBAECa,UAAU,SACVG,QAAS,WACRjB,EAAYC,IAJd,SAOQ,OAANe,EAAa,IAAMA,GANff,QAWT,qBAAKiB,GAAG,WAAR,SACEpB,EACE,WAAaA,EACb,iBAAmBF,EAAQ,IAAM,aCzCzCuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,W","file":"static/js/main.f42a0996.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\t// State to store 3x3 grid\n\tconst [board, setBoard] = useState(Array(9).fill(null));\n\tconst [turnX, setTurnX] = useState(true);\n\tconst [winner, setWinner] = useState(null);\n\n\tconst handleClick = (i) => {\n\t\tconst boardCopy = [...board];\n\t\tif (winner || boardCopy[i] != null) return;\n\t\tboardCopy[i] = turnX ? 'X' : 'O';\n\t\tsetBoard(boardCopy);\n\t\tsetTurnX(!turnX);\n\t\tsetWinner(calculateWinner(boardCopy));\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.getElementById('win-text').innerHTML = winner\n\t\t\t? 'Winner: ' + winner + '! Refresh to play again'\n\t\t\t: 'Next Player: ' + (turnX ? 'X' : 'O');\n\t}, [board]);\n\n\tconst boardGUI = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1 className=\"heading\">Tic-Tac-Toe</h1>\n\t\t\t\t<div className=\"board\">\n\t\t\t\t\t{board.map((x, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tclassName=\"square\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleClick(i);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{x === null ? '_' : x}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<div id=\"win-text\">\n\t\t\t\t\t{winner\n\t\t\t\t\t\t? 'Winner: ' + winner\n\t\t\t\t\t\t: 'Next Player: ' + (turnX ? 'X' : 'O')}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn <div className=\"App\">{boardGUI()}</div>;\n}\n\n// Check for win function : Thanks to https://www.freecodecamp.org/news/learn-how-to-build-tic-tac-toe-with-react-hooks/\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (\n\t\t\tsquares[a] &&\n\t\t\tsquares[a] === squares[b] &&\n\t\t\tsquares[a] === squares[c]\n\t\t) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}